//$MySQL:>connect;

// Item 1: List names of students and their mentors;
<showtext>
$Saxon:>
<Item1>
{
  for $s in doc("ComS363/Projects/Datasets/Student.xml")/Students/Student

  let $sName := doc("ComS363/Projects/Datasets/Person.xml")/Persons/Person[ID = $s/StudentID]/Name
  let $mID := doc("ComS363/Projects/Datasets/Instructor.xml")/Instructors/Instructor[InstructorID = $s/MentorID]/InstructorID
  let $mName := doc("ComS363/Projects/Datasets/Person.xml")/Persons/Person[ID = $mID]/Name

  return <StudentMentor><StudentName> { $sName } </StudentName> <MentorName> { $mName } </MentorName></StudentMentor>
}
</Item1>;
</showtext>

// Item 2: For each classification, list the classification and the average GPA of students with that classification. Your query should not use any constants, such as "Freshman";
<showtext>
$Saxon:>
<Item2>
{
  for $s in distinct-values(doc("ComS363/Projects/Datasets/Student.xml")/Students/Student/Classification)

  let $avgGPA := avg(doc("ComS363/Projects/Datasets/Student.xml")/Students/Student[Classification = $s]/GPA)

  return <ClassificationGPA><Classification> { $s } </Classification><AvgGPA> { $avgGPA } </AvgGPA></ClassificationGPA> 
}
</Item2>;
</showtext>

// Item 3: For each enrolled student, list his/her name and his/her mentor's name;
<showtext>
$Saxon:>
<Item3>
{
  for $s in doc("ComS363/Projects/Datasets/Enrollment.xml")/Enrollments/Enrollment/StudentID

  let $sName := doc("ComS363/Projects/Datasets/Person.xml")/Persons/Person[ID = $s]/Name
  
  let $mID := doc("ComS363/Projects/Datasets/Student.xml")/Students/Student[StudentID = $s]/MentorID
  let $mName := doc("ComS363/Projects/Datasets/Person.xml")/Persons/Person[ID = $mID]/Name

  return <EnrolledStudentMentor><StudentName> { $sName } </StudentName><MentorName> { $mName } </MentorName></EnrolledStudentMentor>
}
</Item3>;
</showtext>

// Item 4: List the Names of students who have at least one A in courses they are enrolled in. (Do not consider A- as an A.);
<showtext>
$Saxon:>
<AStudents>
{
  for $s in distinct-values(doc("ComS363/Projects/Datasets/Enrollment.xml")/Enrollments/Enrollment[Grade = "A"]/StudentID)

  let $sName := doc("ComS363/Projects/Datasets/Person.xml")/Persons/Person[ID = $s]/Name

  return <AStudent> { $sName } </AStudent>
}
</AStudents>;
</showtext>

// Item 5: List the course codes of courses that are prerequisites for the course CS311;
<showtext>
$Saxon:>
<PreReqsCS311> 
{
  for $c in doc("ComS363/Projects/Datasets/Course.xml")/Courses/Course[CourseCode = "CS311"]/PreReq

  return $c
}
</PreReqsCS311>;
</showtext>

// Item 6: Restructure Student.xml by classification. There should be one element per classification in which the remaining information about students should be included in one element per student;
<showtext>
$Saxon:>
<Class>
  let $class := fn:distinct-values(doc("ComS363/Projects/Datasets/Student.xml")//Student/Classification)
  
  for $c in $class
  return <Classification year = "{$c}">{
    for $p in doc("ComS363/Projects/Datasets/Person.xml")/Persons/Person
    let $s := doc("ComS363/Projects/Datasets/Student.xml")/Students/Student[StudentID = $p/ID]
    where $s/Classification = $c
    return <Student> { $p/Name } </Student>
  }
  </Classification>

</Class>;
</showtext>

//Item 6;
<showtext>
$Saxon:><Students>
{
   let $grade_levels := fn:distinct-values(doc("ComS363/Projects/Datasets/Student.xml")//Student/Classification)
   for $classification in $grade_levels
       return <Classification year = "{$classification}">{
       for $person in doc("ComS363/Projects/Datasets/Person.xml")//Person
           let $student := doc("ComS363/Projects/Datasets/Student.xml")//Student[StudentID = $person/ID]
           where $student/Classification = $classification
           return  <Student>{$person/Name}</Student>
       }</Classification>
}
</Students>;
</showtext>

//OOXQUERY;

// Item 7: List the Name, and Rank of faculty who have a salary of 100K or higher;
<showtext>
$OOXQuery:>
<Item7>

</Item7>;
</showtext>